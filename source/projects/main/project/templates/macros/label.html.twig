{% macro label_names_to_string(labels, locale) %}
    {% set locales = {'en-GB': 'en', 'fr-FR': 'fr', 'es-ES': 'es', 'pt-PT': 'pt'} %}

    {% if labels|length %}
        {% for label in labels %}
            {% if label._id|publication_route %}
                <a href="{{ label._id|publication_route }}">{{ label.name|t(locales)|replace({('Publication'|t(locales))~'/':''}) }}</a>{{ not loop.last ? ', ' }}
            {% else %}
                <span>{{ label.name|t(locales)|replace({('Publication'|t(locales))~'/':''}) }}</span>{{ not loop.last ? ', ' }}
            {% endif %}
        {% endfor %}
    {% endif %}
{% endmacro %}

{# Get the cleaned label name (without the label type name) #}
{% macro theme_to_string(label, locale) %}
    {% set locales = {'en-GB': 'en', 'fr-FR': 'fr', 'es-ES': 'es', 'pt-PT': 'pt'} %}
    {% if label.name %}
        {{ label.name|t(locales)|split('/')|last}}
    {% endif %}
{% endmacro %}

{# Extract a string of comma separated label titles and return it #}
{% macro publications(labels, locale) %}
    {% set locales = {'en-GB': 'en', 'fr-FR': 'fr', 'es-ES': 'es', 'pt-PT': 'pt'} %}

    {% if labels|length %}
        {% set publication_titles = []%}
        {% for label in labels %}

            {# if the publication has a rout, wrap in a, else wrap in span #}
            {% if label._id|publication_route %}

                {% set publication_titles = publication_titles|merge(['<a href="%s">%s</a>'|format(label._id|publication_route, label.name|t(locales)|replace({('Publication'|t(locales))~'/':'', ('Issue'|i18n)~'/':''}))]) %}
            {% else %}

                {% set publication_titles = publication_titles|merge(['<span>%s</span>'|format(label.name|t(locales)|replace({('Publication'|t(locales))~'/':'', ('Issue'|i18n)~'/':''}))]) %}
            {% endif %}
        {% endfor %}
    {% endif %}
    {{ publication_titles|humanList(' %s '|format('and'|i18n))|raw }}
{% endmacro %}

{# Extract the root publication label #}
{% macro publication(labels, root = true, wrap = true, locale) %}
    {% import _self as label %}
    {% set locales = {'en-GB': 'en', 'fr-FR': 'fr', 'es-ES': 'es', 'pt-PT': 'pt'} %}

    {% if label.publication_to_string|length %}
        <span>{{ label.publication_to_string }}</span>
    {% endif %}
{% endmacro %}

{# Extract the root publication label #}
{% macro publication_to_string(labels, root = true, locale) %}
    {% set locales = {'en-GB': 'en', 'fr-FR': 'fr', 'es-ES': 'es', 'pt-PT': 'pt'} %}

    {% if labels|length %}
        {% set publication = "" %}
        {# reverse the array, we only want the first root publication as it appears in the SCR output #}
        {% for label in labels|reverse %}

            {% if label.name|replace({"Publication/": ""}) matches "{[\/]}" %}
                {% if root %}
                    {# do nothing, this is not a root publication #}
                {% else %}
                    {% set publication = label.name|replace({"Publication/": ""}) %}
                {% endif %}
            {% else %}
                {% if root %}
                    {% set publication = label.name|replace({"Publication/": ""}) %}
                {% else %}
                    {# do nothing, this is a root publication #}
                {% endif %}
            {% endif %}
        {% endfor %}
    {% endif %}
    {% if publication != "" %}
        {{ publication }}
    {% endif %}
{% endmacro %}
